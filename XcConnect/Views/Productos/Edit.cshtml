
@model XcConnect.Models.Producto

@{
    ViewBag.Title = "Productos";
}
<style>
    .input-group-addon {
        min-width: 40px;
        text-align: center;
    }

    .form-group {
        margin-top: -8px;
    }
</style>

<h2>Editar Productos</h2>

@using (Html.BeginForm("Edit", "Productos", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row wrapper border-bottom white-bg page-headingl">
        <hr />
        @Html.ValidationSummary(true, "Advertencias: ", new { @class = "text-danger" })
        <br />
        @Html.HiddenFor(model => model.ProductoID)

        <div class="form-group">
            @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NombreProducto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreProducto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreProducto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Especificaciones, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.Especificaciones, new { htmlAttributes = new { @class = "form-control", rows = "12" } })
                @Html.ValidationMessageFor(model => model.Especificaciones, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control", rows = "12" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary btn-md" />
            </div>
        </div>

        <br />

        <div>
            @Html.ActionLink("Regresar a la lista", "Index")
        </div>

        <br />

    </div>
}


@section Styles {
    @Styles.Render("~/bundles/bootstrapselect/css/")
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrapselect")
}
